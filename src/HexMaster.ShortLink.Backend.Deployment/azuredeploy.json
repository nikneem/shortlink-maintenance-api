{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "environment": {
      "type": "string",
      "allowedValues": ["dev", "test", "prod"]
    },
    "systemName": {
      "type": "string"
    },
    "resolverSku": {
      "type": "object"
    },
    "maintenanceSku": {
      "type": "object"
    }
  },
  "variables": {
    "environment": "[parameters('environment')]",
    "systemName": "[parameters('systemName')]",

    "resolverSku": "[parameters('resolverSku')]",
    "maintenanceSku": "[parameters('maintenanceSku')]",

    "applicationInsightsName": "[concat(variables('systemName'), '-', variables('environment'), '-appinsights')]",
    "keyVaultName": "[concat(variables('systemName'), '-', variables('environment'), '-kv')]",
    "eventHubNamespace": "[concat(variables('systemName'), '-', variables('environment'), '-eventhub')]",

    "rediCacheName": "[concat(variables('systemName'), '-', variables('environment'), '-cache')]",

    "resolveFunctionName": "[concat(variables('systemName'), '-', variables('environment'), '-resolve')]",
    "maintenanceFunctionName": "[concat(variables('systemName'), '-', variables('environment'), '-maintenance')]",

    "resolveFunctionAppName": "[concat(variables('systemName'), '-', variables('environment'), '-resolve-app')]",
    "maintenanceFunctionAppName": "[concat(variables('systemName'), '-', variables('environment'), '-maintenance-app')]",

    "eventHubs": ["click-events"],

    "storageAccountName": "[concat(variables('systemName'), variables('environment'), 'storage')]",
    "storageAccountShares": ["resolve-function", "maintenance-function"],

    "secretStorageAccountConnectionString": "StorageAccountConnectionString",
    "secretApplicationInsightsInstrumentationKey": "ApplicationInsightsInstrumentationKey",
    "secretEventHubSender": "EventHubSenderConnectionString",
    "secretEventHubListener": "EventHubListenerConnectionString",
    "secretRedisCacheConnectionString": "RedisCacheConnectionString",

    "linkedTemplatesLocation": "https://raw.githubusercontent.com/nikneem/shortlink-maintenance-api/main/src/HexMaster.ShortLink.Backend.Deployment/linked-templates/",
    "eventHubNamespaceTemplate": "[concat(variables('linkedTemplatesLocation'), 'EventHub/namespaces.json')]",
    "storageAccountTemplate": "[concat(variables('linkedTemplatesLocation'), 'Storage/account.json')]",
    "functionsAppTemplate": "[concat(variables('linkedTemplatesLocation'), 'Web/function-app.json')]",
    "applicationInsightsTemplate": "[concat(variables('linkedTemplatesLocation'), 'Insights/components.json')]",
    "keyVaultTemplate": "[concat(variables('linkedTemplatesLocation'), 'KeyVault/vaults.json')]",
    "keyVaultAccessPoliciesTemplate": "[concat(variables('linkedTemplatesLocation'), 'KeyVault/keyvaultaccesspolicies.json')]",
    "redisCacheTemplate": "[concat(variables('linkedTemplatesLocation'), 'Cache/redis.json')]"
  },
  "functions": [
    {
      "namespace": "eke",
      "members": {
        "keyVaultReference": {
          "parameters": [
            {
              "name": "keyVaultName",
              "type": "string"
            },
            {
              "name": "secretName",
              "type": "string"
            }
          ],
          "output": {
            "type": "string",
            "value": "[concat('@Microsoft.KeyVault(SecretUri=https://', parameters('keyVaultName'), '.vault.azure.net/secrets/', parameters('secretName'), '/)')]"
          }
        }
      }
    }
  ],
  "resources": [
    {
      "name": "applicationInsightsDeployment",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-08-01",
      "dependsOn": [],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('applicationInsightsTemplate')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "applicationInsightsName": {
            "value": "[variables('applicationInsightsName')]"
          }
        }
      }
    },

    {
      "name": "keyVaultDeployment",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-08-01",
      "dependsOn": [],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('keyVaultTemplate')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "keyVaultName": {
            "value": "[variables('keyVaultName')]"
          }
        }
      }
    },

    {
      "name": "storageAccount",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-08-01",
      "dependsOn": [],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('storageAccountTemplate')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "storageAccountName": {
            "value": "[variables('storageAccountName')]"
          },
          "shares": {
            "value": "[variables('storageAccountShares')]"
          }
        }
      }
    },

    {
      "name": "eventHubNamespace",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-08-01",
      "dependsOn": [],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('eventHubNamespaceTemplate')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "eventHubNamespace": {
            "value": "[variables('eventHubNamespace')]"
          },
          "eventHubs": {
            "value": "[variables('eventHubs')]"
          }
        }
      }
    },

    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2016-10-01",
      "name": "[concat(variables('keyVaultName'), '/', variables('secretApplicationInsightsInstrumentationKey'))]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'applicationInsightsDeployment')]",
        "[resourceId('Microsoft.Resources/deployments', 'keyVaultDeployment')]"
      ],
      "properties": {
        "attributes": {
          "enabled": true
        },
        "value": "[reference('applicationInsightsDeployment').outputs.ApplicationInsightsInstrumentationKey.value]"
      }
    },

    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2016-10-01",
      "name": "[concat(variables('keyVaultName'), '/', variables('secretStorageAccountConnectionString'))]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'storageAccount')]",
        "[resourceId('Microsoft.Resources/deployments', 'keyVaultDeployment')]"
      ],
      "properties": {
        "attributes": {
          "enabled": true
        },
        "value": "[reference('storageAccount').outputs.storageAccountConnectionString.value]"
      }
    },

    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2016-10-01",
      "name": "[concat(variables('keyVaultName'), '/', variables('secretEventHubSender'))]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'eventHubNamespace')]",
        "[resourceId('Microsoft.Resources/deployments', 'keyVaultDeployment')]"
      ],
      "properties": {
        "attributes": {
          "enabled": true
        },
        "value": "[reference('eventHubNamespace').outputs.EventHubSenderConnectionString.value]"
      }
    },

    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2016-10-01",
      "name": "[concat(variables('keyVaultName'), '/', variables('secretEventHubListener'))]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'eventHubNamespace')]",
        "[resourceId('Microsoft.Resources/deployments', 'keyVaultDeployment')]"
      ],
      "properties": {
        "attributes": {
          "enabled": true
        },
        "value": "[reference('eventHubNamespace').outputs.EventHubListenerConnectionString.value]"
      }
    },

    {
      "name": "functionsAppResolver",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-08-01",
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'storageAccount')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('functionsAppTemplate')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "storageAccountConnectionString": {
            "value": "[reference('storageAccount').outputs.storageAccountConnectionString.value]"
          },
          "functionsWebApp": { "value": "[variables('resolveFunctionName')]" },
          "storageShareName": { "value": "resolve-function" },
          "sku": { "value": "[variables('resolverSku')]" }
        }
      }
    },

    {
      "name": "functionsAppMaintenance",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-08-01",
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'storageAccount')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('functionsAppTemplate')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "storageAccountConnectionString": {
            "value": "[reference('storageAccount').outputs.storageAccountConnectionString.value]"
          },
          "functionsWebApp": {
            "value": "[variables('maintenanceFunctionName')]"
          },
          "storageShareName": { "value": "maintenance-function" },
          "sku": { "value": "[variables('maintenanceSku')]" }
        }
      }
    },

    {
      "name": "functionAppResolverKeyVaultAccessPolicies",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-08-01",
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'functionsAppResolver')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('keyVaultAccessPoliciesTemplate')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "keyVaultName": {
            "value": "[variables('keyvaultName')]"
          },
          "resourceId": {
            "value": "[resourceId(resourceGroup().name, 'Microsoft.Web/Sites/',  variables('resolveFunctionAppName'))]"
          }
        }
      }
    },
    {
      "name": "functionAppMaintenanceKeyVaultAccessPolicies",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-08-01",
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'functionsAppMaintenance')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('keyVaultAccessPoliciesTemplate')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "keyVaultName": {
            "value": "[variables('keyvaultName')]"
          },
          "resourceId": {
            "value": "[resourceId(resourceGroup().name, 'Microsoft.Web/Sites/', variables('maintenanceFunctionAppName'))]"
          }
        }
      }
    },

    {
      "name": "redisCache",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-08-01",
      "dependsOn": [],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('redisCacheTemplate')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "cacheName": {
            "value": "[variables('rediCacheName')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2016-10-01",
      "name": "[concat(variables('keyVaultName'), '/', variables('secretRedisCacheConnectionString'))]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'redisCache')]",
        "[resourceId('Microsoft.Resources/deployments', 'keyVaultDeployment')]"
      ],
      "properties": {
        "attributes": {
          "enabled": true
        },
        "value": "[reference('redisCache').outputs.redisCacheConnectionString.value]"
      }
    },

    {
      "type": "Microsoft.Web/sites/config",
      "name": "[concat(variables('resolveFunctionAppName'), '/appsettings')]",
      "apiVersion": "2018-11-01",
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'functionsAppResolver')]",
        "[resourceId('Microsoft.Resources/deployments', 'functionAppResolverKeyVaultAccessPolicies')]"
      ],
      "properties": {
        "AzureWebJobsStorage": "[eke.keyVaultReference(variables('keyVaultName'), variables('secretStorageAccountConnectionString'))]",
        "CloudSettings:StorageConnectionString": "[eke.keyVaultReference(variables('keyVaultName'), variables('secretStorageAccountConnectionString'))]",
        "CloudSettings:EventHubSenderConnectionString": "[eke.keyVaultReference(variables('keyVaultName'), variables('secretEventHubSender'))]",
        "CloudSettings:EventHubListenerConnectionString": "[eke.keyVaultReference(variables('keyVaultName'), variables('secretEventHubListener'))]",
        "CloudSettings:RedisCacheConnectionString": "[eke.keyVaultReference(variables('keyVaultName'), variables('secretRedisCacheConnectionString'))]",
        "APPINSIGHTS_INSTRUMENTATIONKEY": "[eke.keyVaultReference(variables('keyVaultName'), variables('secretApplicationInsightsInstrumentationKey'))]",
        "FUNCTIONS_WORKER_RUNTIME": "dotnet",
        "FUNCTIONS_EXTENSION_VERSION": "~3",
        "WEBSITE_CONTENTSHARE": "resolve-function",
        "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING": "[eke.keyVaultReference(variables('keyVaultName'), variables('secretStorageAccountConnectionString'))]",
        "WEBSITE_RUN_FROM_PACKAGE": "1"
      }
    },
    {
      "type": "Microsoft.Web/sites/config",
      "name": "[concat(variables('maintenanceFunctionAppName'), '/appsettings')]",
      "apiVersion": "2018-11-01",
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'functionsAppMaintenance')]",
        "[resourceId('Microsoft.Resources/deployments', 'functionAppMaintenanceKeyVaultAccessPolicies')]"
      ],
      "properties": {
        "AzureWebJobsStorage": "[eke.keyVaultReference(variables('keyVaultName'), variables('secretStorageAccountConnectionString'))]",
        "CloudSettings:StorageConnectionString": "[eke.keyVaultReference(variables('keyVaultName'), variables('secretStorageAccountConnectionString'))]",
        "CloudSettings:EventHubSenderConnectionString": "[eke.keyVaultReference(variables('keyVaultName'), variables('secretEventHubSender'))]",
        "CloudSettings:EventHubListenerConnectionString": "[eke.keyVaultReference(variables('keyVaultName'), variables('secretEventHubListener'))]",
        "CloudSettings:RedisCacheConnectionString": "[eke.keyVaultReference(variables('keyVaultName'), variables('secretRedisCacheConnectionString'))]",
        "JwtBinding:Audience": "5e039917-1ed1-4706-bd47-1f1608c10e09",
        "JwtBinding:Issuer": "https://login.microsoftonline.com/5992a427-2b8e-43f2-a467-7fdc724be4bd/v2.0",
        "APPINSIGHTS_INSTRUMENTATIONKEY": "[eke.keyVaultReference(variables('keyVaultName'), variables('secretApplicationInsightsInstrumentationKey'))]",
        "FUNCTIONS_WORKER_RUNTIME": "dotnet",
        "FUNCTIONS_EXTENSION_VERSION": "~3",
        "WEBSITE_CONTENTSHARE": "maintenance-function",
        "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING": "[eke.keyVaultReference(variables('keyVaultName'), variables('secretStorageAccountConnectionString'))]",
        "WEBSITE_RUN_FROM_PACKAGE": "1"
      }
    }
  ],
  "outputs": {}
}
