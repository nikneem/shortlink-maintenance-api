{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "environment": {
      "type": "string",
      "allowedValues": ["dev", "test", "prod"]
    },
    "systemName": {
      "type": "string"
    },
    "resolverSku": {
      "type": "object"
    },
    "maintenanceSku": {
      "type": "object"
    }
  },
  "variables": {
    "environment": "[parameters('environment')]",
    "systemName": "[parameters('systemName')]",

    "resolverSystemName": "[concat(variables('systemName'), '-resolver')]",
    "maintenanceSystemName": "[concat(variables('systemName'), '-maintenance')]",
    "letsencryptSystemName": "[concat(variables('systemName'), '-letsencrypt')]",

    "resolverSku": "[parameters('resolverSku')]",
    "maintenanceSku": "[parameters('maintenanceSku')]",

    "applicationInsightsName": "[concat(variables('systemName'), '-', variables('environment'), '-appinsights')]",
    "keyVaultName": "[concat(variables('systemName'), '-', variables('environment'), '-kv')]",
    "eventHubNamespace": "[concat(variables('systemName'), '-', variables('environment'), '-eventhub')]",

    "resolveFunctionName": "[concat(variables('systemName'), '-', variables('environment'), '-resolve')]",
    "maintenanceFunctionName": "[concat(variables('systemName'), '-', variables('environment'), '-maintenance')]",

    "resolveFunctionAppName": "[concat(variables('systemName'), '-', variables('environment'), '-resolve-app')]",
    "maintenanceFunctionAppName": "[concat(variables('systemName'), '-', variables('environment'), '-maintenance-app')]",

    "eventHubs": ["click-events"],

    "secretStorageAccountConnectionString": "StorageAccountConnectionString",
    "secretApplicationInsightsInstrumentationKey": "ApplicationInsightsInstrumentationKey",
    "secretEventHubSender": "EventHubSenderConnectionString",
    "secretEventHubListener": "EventHubListenerConnectionString",
    "secretRedisCacheConnectionString": "RedisCacheConnectionString",

    "linkedTemplatesLocation": "https://raw.githubusercontent.com/nikneem/shortlink-maintenance-api/main/src/HexMaster.ShortLink.Backend.Deployment/linked-templates/",
    "storageAccountTemplate": "[concat(variables('linkedTemplatesLocation'), 'Storage/account.json')]",
    "applicationInsightsTemplate": "[concat(variables('linkedTemplatesLocation'), 'Insights/components.json')]",
    "configurationStore": "[concat(variables('linkedTemplatesLocation'), 'AppConfiguration/configurationStores.json')]",
    "eventHubNamespaceTemplate": "[concat(variables('linkedTemplatesLocation'), 'EventHub/namespaces.json')]",
    "eventHubTemplate": "[concat(variables('linkedTemplatesLocation'), 'EventHub/namespaces/eventhubs.json')]",
    "keyVaultTemplate": "[concat(variables('linkedTemplatesLocation'), 'KeyVault/vaults.json')]",
    "keyVaultSecretTemplate": "[concat(variables('linkedTemplatesLocation'), 'KeyVault/vaults/secrets.json')]",
    "redisCacheTemplate": "[concat(variables('linkedTemplatesLocation'), 'Cache/redis.json')]",

    "appServicePlanTemplate": "[concat(variables('linkedTemplatesLocation'), 'Web/serverfarms.json')]",
    "appServiceTemplate": "[concat(variables('linkedTemplatesLocation'), 'Web/sites.json')]",
    "keyVaultAccessPoliciesTemplate": "[concat(variables('linkedTemplatesLocation'), 'KeyVault/vauls/accessPolicies.json')]",
    "keyVaultSecretsTemplate": "[concat(variables('linkedTemplatesLocation'), 'KeyVault/vauls/secrets.json')]"


  },
  "functions": [],
  "resources": [

    // KeyVault
    {
      "name": "keyvault",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('keyVaultTemplate')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "environment": {
            "value": "[variables('environment')]"
          },
          "systemName": {
            "value": "[variables('systemName')]"
          }
        }
      }
    },

    // Storage Account
    {
      "name": "storageAccount",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-08-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('storageAccountTemplate')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "environment": {
            "value": "[variables('environment')]"
          },
          "systemName": {
            "value": "[variables('systemName')]"
          }
        }
      }
    },
        {
      "name": "storageAccountSecret",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-08-01",
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'storageAccount')]",
        "[resourceId('Microsoft.Resources/deployments', 'keyvault')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('keyVaultsSecretsLinkedTemplateUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "keyVault": {
            "value": "[variables('keyvault-name')]"
          },
          "name": {
            "value": "AzureWebJobsStorage"
          },
          "value": {
            "value": "[reference('storageAccount').outputs.ConnectionString.value]"
          }
        }
      }
    },




    // Application Insights
    {
      "name": "applicationInsights",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-08-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('applicationInsightsTemplate')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "systemName": {
            "value": "[variables('systemName')]"
          },
          "environment": {
            "value": "[variables('environment')]"
          }
        }
      }
    },

    // App configuration store
    {
      "name": "configurationStore",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-08-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('configurationStore')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "environment": {
            "value": "[variables('environment')]"
          },
          "systemName": {
            "value": "[variables('systemName')]"
          }
        }
      }
    },



    // Event hub namespace and event hubs
    {
      "name": "eventHubNamespace",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-08-01",
      "dependsOn": [],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('eventHubNamespaceTemplate')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "environment": {
            "value": "[variables('environment')]"
          },
          "systemName": {
            "value": "[variables('systemName')]"
          }
        }
      }
    },
    {
      "name": "eventHubs",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-08-01",
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'eventHubNamespace')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('eventHubTemplate')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "environment": {
            "value": "[variables('environment')]"
          },
          "systemName": {
            "value": "[variables('systemName')]"
          },
          "eventHubs": {
            "value": "[variables('eventHubs')]"
          }
        }
      }
    },

    // Azure cache for Redis
    {
      "name": "redisCache",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-08-01",
      "dependsOn": [],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('redisCacheTemplate')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "environment": {
            "value": "[variables('environment')]"
          },
          "systemName": {
            "value": "[variables('systemName')]"
          }
        }
      }
    },

    // // Adding secrets to the keyvault
    // {
    //   "type": "Microsoft.Resources/deployments",
    //   "name": "[concat('keyVaultSecret', union(reference('storageAccount').outputs.Config.value,reference('applicationInsights').outputs.Config.value,reference('configurationStore').outputs.Config.value,reference('eventHubNamespace').outputs.Config.value,reference('redisCache').outputs.Config.value)[copyIndex()].name)]",
    //   "apiVersion": "2019-08-01",
    //   "dependsOn": [
    //       "[resourceId('Microsoft.Resources/deployments', 'storageAccount')]",
    //       "[resourceId('Microsoft.Resources/deployments', 'applicationInsights')]",
    //       "[resourceId('Microsoft.Resources/deployments', 'configurationStore')]",
    //       "[resourceId('Microsoft.Resources/deployments', 'keyvault')]",
    //       "[resourceId('Microsoft.Resources/deployments', 'eventHubNamespace')]",
    //       "[resourceId('Microsoft.Resources/deployments', 'redisCache')]"
    //   ],
    //   "properties": {
    //     "mode": "Incremental",
    //     "templateLink": {
    //       "uri": "[variables('keyVaultSecretTemplate')]",
    //       "contentVersion": "1.0.0.0"
    //     },
    //     "parameters": {
    //       "environment": {
    //         "value": "[variables('environment')]"
    //       },
    //       "systemName": {
    //         "value": "[variables('systemName')]"
    //       },
    //       "name": {
    //         "value": "[union(reference('storageAccount').outputs.Config.value,reference('applicationInsights').outputs.Config.value,reference('configurationStore').outputs.Config.value,reference('eventHubNamespace').outputs.Config.value,reference('redisCache').outputs.Config.value)[copyIndex()].name]"
    //       },
    //       "value": {
    //         "value": "[union(
    //           reference('storageAccount').outputs.Config.value,
    //           reference('applicationInsights').outputs.Config.value,
    //           reference('configurationStore').outputs.Config.value,
    //           reference('eventHubNamespace').outputs.Config.value,
    //           reference('redisCache').outputs.Config.value
    //           )[copyIndex()].value]"
    //       }
    //     }
    //   },
    //   "copy": {
    //     "name": "appsettingscopy",
    //     "count": "[length(union(
    //           reference('storageAccount').outputs.Config.value,
    //           reference('applicationInsights').outputs.Config.value,
    //           reference('configurationStore').outputs.Config.value,
    //           reference('eventHubNamespace').outputs.Config.value,
    //           reference('redisCache').outputs.Config.value
    //           ))]"
    //   }
    // },



    // App service plans and app services
    {
      "name": "resolverAppPlan",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-08-01",
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'storageAccount')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('appServicePlanTemplate')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "environment":{
            "value": "[variables('environment')]"
          },
          "systemName":{
            "value": "[variables('resolverSystemName')]"
          },
          "skuInfo":{
            "value": "[variables('resolverSku')]"
          },
          "kind":{
            "value": "functionapp"
          }
        }
      }
    },
    {
      "name": "maintenanceAppPlan",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-08-01",
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'storageAccount')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('appServicePlanTemplate')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "environment":{
            "value": "[variables('environment')]"
          },
          "systemName":{
            "value": "[variables('maintenanceSystemName')]"
          },
          "skuInfo":{
            "value": "[variables('maintenanceSku')]"
          },
          "kind":{
            "value": "functionapp"
          }        
        }
      }
    },
    {
      "name": "resolverAppService",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-08-01",
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'storageAccount')]",
        "[resourceId('Microsoft.Resources/deployments', 'resolverAppPlan')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('appServiceTemplate')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "environment":{
            "value": "[variables('environment')]"
          },
          "systemName":{
            "value": "[variables('resolverSystemName')]"
          },
          "kind":{
            "value": "functionapp"
          }
        }
      }
    },
    {
      "name": "maintenanceAppService",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-08-01",
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'storageAccount')]",
        "[resourceId('Microsoft.Resources/deployments', 'maintenanceAppPlan')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('appServiceTemplate')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "environment":{
            "value": "[variables('environment')]"
          },
          "systemName":{
            "value": "[variables('maintenanceSystemName')]"
          },
          "kind":{
            "value": "functionapp"
          }
        }
      }
    }

    // {
    //   "name": "functionAppResolverKeyVaultAccessPolicies",
    //   "type": "Microsoft.Resources/deployments",
    //   "apiVersion": "2019-08-01",
    //   "dependsOn": [
    //     "[resourceId('Microsoft.Resources/deployments', 'functionsAppResolver')]"
    //   ],
    //   "properties": {
    //     "mode": "Incremental",
    //     "templateLink": {
    //       "uri": "[variables('keyVaultAccessPoliciesTemplate')]",
    //       "contentVersion": "1.0.0.0"
    //     },
    //     "parameters": {
    //       "keyVaultName": {
    //         "value": "[variables('keyvaultName')]"
    //       },
    //       "resourceId": {
    //         "value": "[resourceId(resourceGroup().name, 'Microsoft.Web/Sites/',  variables('resolveFunctionAppName'))]"
    //       }
    //     }
    //   }
    // },
    // {
    //   "name": "functionAppMaintenanceKeyVaultAccessPolicies",
    //   "type": "Microsoft.Resources/deployments",
    //   "apiVersion": "2019-08-01",
    //   "dependsOn": [
    //     "[resourceId('Microsoft.Resources/deployments', 'functionsAppMaintenance')]"
    //   ],
    //   "properties": {
    //     "mode": "Incremental",
    //     "templateLink": {
    //       "uri": "[variables('keyVaultAccessPoliciesTemplate')]",
    //       "contentVersion": "1.0.0.0"
    //     },
    //     "parameters": {
    //       "keyVaultName": {
    //         "value": "[variables('keyvaultName')]"
    //       },
    //       "resourceId": {
    //         "value": "[resourceId(resourceGroup().name, 'Microsoft.Web/Sites/', variables('maintenanceFunctionAppName'))]"
    //       }
    //     }
    //   }
    // },



    // {
    //   "type": "Microsoft.Web/sites/config",
    //   "name": "[concat(variables('resolveFunctionAppName'), '/appsettings')]",
    //   "apiVersion": "2018-11-01",
    //   "dependsOn": [
    //     "[resourceId('Microsoft.Resources/deployments', 'functionsAppResolver')]",
    //     "[resourceId('Microsoft.Resources/deployments', 'functionAppResolverKeyVaultAccessPolicies')]"
    //   ],
    //   "properties": {
    //     "AzureWebJobsStorage": "[eke.keyVaultReference(variables('keyVaultName'), variables('secretStorageAccountConnectionString'))]",
    //     "CloudSettings:StorageConnectionString": "[eke.keyVaultReference(variables('keyVaultName'), variables('secretStorageAccountConnectionString'))]",
    //     "CloudSettings:EventHubSenderConnectionString": "[eke.keyVaultReference(variables('keyVaultName'), variables('secretEventHubSender'))]",
    //     "CloudSettings:EventHubListenerConnectionString": "[eke.keyVaultReference(variables('keyVaultName'), variables('secretEventHubListener'))]",
    //     "CloudSettings:RedisCacheConnectionString": "[eke.keyVaultReference(variables('keyVaultName'), variables('secretRedisCacheConnectionString'))]",
    //     "APPINSIGHTS_INSTRUMENTATIONKEY": "[eke.keyVaultReference(variables('keyVaultName'), variables('secretApplicationInsightsInstrumentationKey'))]",
    //     "FUNCTIONS_WORKER_RUNTIME": "dotnet",
    //     "FUNCTIONS_EXTENSION_VERSION": "~3",
    //     "WEBSITE_CONTENTSHARE": "resolve-function",
    //     "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING": "[eke.keyVaultReference(variables('keyVaultName'), variables('secretStorageAccountConnectionString'))]",
    //     "WEBSITE_RUN_FROM_PACKAGE": "1"
    //   }
    // },
    // {
    //   "type": "Microsoft.Web/sites/config",
    //   "name": "[concat(variables('maintenanceFunctionAppName'), '/appsettings')]",
    //   "apiVersion": "2018-11-01",
    //   "dependsOn": [
    //     "[resourceId('Microsoft.Resources/deployments', 'functionsAppMaintenance')]",
    //     "[resourceId('Microsoft.Resources/deployments', 'functionAppMaintenanceKeyVaultAccessPolicies')]"
    //   ],
    //   "properties": {
    //     "AzureWebJobsStorage": "[eke.keyVaultReference(variables('keyVaultName'), variables('secretStorageAccountConnectionString'))]",
    //     "CloudSettings:StorageConnectionString": "[eke.keyVaultReference(variables('keyVaultName'), variables('secretStorageAccountConnectionString'))]",
    //     "CloudSettings:EventHubSenderConnectionString": "[eke.keyVaultReference(variables('keyVaultName'), variables('secretEventHubSender'))]",
    //     "CloudSettings:EventHubListenerConnectionString": "[eke.keyVaultReference(variables('keyVaultName'), variables('secretEventHubListener'))]",
    //     "CloudSettings:RedisCacheConnectionString": "[eke.keyVaultReference(variables('keyVaultName'), variables('secretRedisCacheConnectionString'))]",
    //     "JwtBinding:Audience": "5e039917-1ed1-4706-bd47-1f1608c10e09",
    //     "JwtBinding:Issuer": "https://login.microsoftonline.com/922cee41-db95-4eff-8022-9b815f545dee/v2.0",
    //     "JwtBinding:IssuerPattern": "https://login.microsoftonline.com/(?<tenant>[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12})/v2.0",
    //     "APPINSIGHTS_INSTRUMENTATIONKEY": "[eke.keyVaultReference(variables('keyVaultName'), variables('secretApplicationInsightsInstrumentationKey'))]",
    //     "FUNCTIONS_WORKER_RUNTIME": "dotnet",
    //     "FUNCTIONS_EXTENSION_VERSION": "~3",
    //     "WEBSITE_CONTENTSHARE": "maintenance-function",
    //     "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING": "[eke.keyVaultReference(variables('keyVaultName'), variables('secretStorageAccountConnectionString'))]",
    //     "WEBSITE_RUN_FROM_PACKAGE": "1"
    //   }
    // }
  ],
  "outputs": {}
}
